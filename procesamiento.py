# -*- coding: utf-8 -*-
#"""hackathon.ipynb

#Automatically generated by Colab.

#Original file is located at
#    https://colab.research.google.com/drive/1o7Q9NM8iFnNLI_MezsQA23SbawI7gKJn
#"""

#import pandas as pd
#import numpy as np
#import scipy
#from scipy.fft import fft
#import matplotlib.pyplot as plt
#from scipy import signal

#eeg = pd.read_csv('/content/datosejemplounicorn.csv')
#eeg = eeg.drop(eeg.index[0]) # Drop first row
#F=250 # Sampling Frequency (Hz)
#columnas = ['EEG 6', 'EEG 7', 'EEG 8'] # Occipital electrodes data
#columnasborrar = [col for col in eeg.columns if col not in columnas] # Delete all other data
#N=len(eeg) #Number of samples
#eeg.drop(columns=columnasborrar, inplace=True)
#T=N/F # Period (s)
#print(eeg)
#plt.plot(eeg)
#plt.title('Electrodos occipitales EEG')
#plt.show()

#print(eeg)

#fft_vals = np.absolute(np.fft.rfft(eeg)) # Get real amplitudes of FFT (only in postive frequencies)
#fft_freq = np.fft.rfftfreq(len(eeg), 1.0/F) # Get frequencies for amplitudes in Hz

#eeg_bands = {'Delta': (0, 4),
#             'Theta': (4, 8),
#             'Alpha': (8, 12),
#             'Beta': (12, 30),
#             'Gamma': (30, 45)} # Define EEG bands


#eeg_band_fft = dict() # Take the mean of the fft amplitude for each EEG band
#for band in eeg_bands:
#    freq_ix = np.where((fft_freq >= eeg_bands[band][0]) &
#                       (fft_freq <= eeg_bands[band][1]))[0]
#    eeg_band_fft[band] = np.mean(fft_vals[freq_ix])

#df = pd.DataFrame(columns=['band', 'val']) # Plot the data
#df['band'] = eeg_bands.keys()
#df['val'] = [eeg_band_fft[band] for band in eeg_bands]
#ax = df.plot.bar(x='band', y='val', legend=False)
#ax.set_xlabel("EEG band")
#ax.set_ylabel("Mean band Amplitude")

#X = fft(eeg); # Fourier
#f = np.arange(0, N) # Frequency vector
#frequencies = f* F/N; # Get frequencies
#f1=plt.plot(frequencies, abs(X))
#bandwidth = max(frequencies) - min(frequencies); # Get bandwidth
#print(bandwidth)

#eeg.insert(loc=0, column='Time', value=np.arange(1, len(eeg) + 1)) # Add time vector
#grabacion=2 #Data to get from Unicorn
#matriznueva = eeg # New matrix = old one
#matriznueva = matriznueva.drop(columns=matriznueva.columns[0]) # Drop time
#if grabacion == 1: # Start
#  matriznueva.insert(loc=0, column='Time', value=np.arange(1, len(matriznueva) + 1)) # Reinsert time to start at 0
#  print(matriznueva)
#if grabacion == 2: # End
#  matriznueva = matriznueva.iloc[:N,:] # Stop
#  print(matriznueva)

#y=df['val'] # Get amplitude
#for band in eeg_bands: # Compare occipital averages vs others
#    if np.average(y[[0,1]])>np.average(y[[2,3,4]]):
#      concentracion=1
#    else:
#      concentracion=0
#print(concentracion)